stages:
  - package
  - container_scan

variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

package_backend:
  stage: package
  image: docker:20.10.16
  tags:
    - docker
  services:
    - docker:20.10.16-dind
  before_script:
    - apk add --no-cache nodejs npm
    - echo "$CI_GITLAB_TOKEN" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"
  script:
    - npm install
    - npm run build
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG


container_scanning:
  stage: container_scan
  image:
    name: docker.io/aquasec/trivy:latest
    entrypoint: [""]
  variables:
    GIT_STRATEGY: none
    TRIVY_USERNAME: "$CI_REGISTRY_USER"
    TRIVY_PASSWORD: "$CI_GITLAB_TOKEN"
    TRIVY_AUTH_URL: "$CI_REGISTRY"
    FULL_IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  script:
    - trivy --version
    - time trivy image --clear-cache
    - time trivy --download-db-only --no-progress --cache-dir .trivycache/
    - trivy image --severity HIGH,CRITICAL IMAGE_TAG
  cache:
    paths:
      - .trivycache/
  artifacts:
    when:                          always
    reports:
      container_scanning:          gl-container-scanning-report.json
  tags:
    - docker
  dependencies:
    - package_backend






